【コンテナ化とは】
アプリケーションを分離されたユーザーインターフェイスで実行できる。
OSレベルで仮想化できる。
コンテナ・エンジンはランタイム環境として機能する。
ホストOSを共有し、アプリケーションと関連するバイナリのみを保持する。
コンテナ化されたアプリケーションは様々なデバイスやOSでシームレスに実行可能。


【従来の仮想化（サーバー仮想化）と何が違う】
ゲストOSの設定が必要ないため、起動時のオーバーヘッドが軽減される。
同じOSカーネルを使用することによって個々のゲストOSの設定が不要になる。
マイクロサービスはコンテナの方が向いている。


【コンテナ化のメリット】
・移植性
    様々なデバイスやOSで動作できる。

・俊敏性
    クロスプラットフォームの柔軟性により迅速にデプロイ可能。

・スピード
    OSカーネルと再利用可能なレイヤーを共有しているため、軽量であり起動が早い。

・障害の分離
    個々の機能がお互いに干渉しないため、堅牢性が保証される。

・効率性
    説明なし。「障害の分離」とセットで説明した可能性あり。

・管理の容易さ
    Kubernetesなどのオーケストレーションプラットフォームなどによって重要なタスクが自動化されている。

・セキュリティ
    コンテナの分離と権限の分離によって、悪意のある脅威からインフラストラクチャを保護できる。