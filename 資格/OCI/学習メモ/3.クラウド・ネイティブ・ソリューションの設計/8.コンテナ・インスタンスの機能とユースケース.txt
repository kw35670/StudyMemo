【機能】
1.コンテナ向けに最適化されたサーバーレス・コンピュート
    サーバーのプロビジョニング、パッチ適用及び管理のオーバーヘッドなし。

1.シンプルな従量課金制
    コンテナ・インスタンスに割り当てられたCPU及びメモリー・リソースに対してのみの支払い。
    サーバーレス・プラットフォームが提供するシームレスな操作に追加料金や税金は発生しない。
    コンテナ・インスタンスがアクティブでない場合、コストは発生しない。
    スケジュールされたジョブかトリガーされたジョブに適したオプション。

3.柔軟な構成で、実行が容易
    CLI、API、OCIコンソールを介して、いくつかの簡単なパラーメタが必要
    コンテナごとに環境変数、起動オプション、リソース制限などを構成することも可能。

4.最大CPU及びメモリー
    すべてのCPUとメモリーをインスタンスに割り当てて、もっとも要求の厳しいワークロードを実行可能。
    例：最大64コア及び1024GBのメモリーを、E3/E4フレックス・シェイプのコンテナ・インスタンスの割り当てることが可能

5.Open Container Initiativeに準拠
    OCIコンテナ・レジストリなど、Open Contaienr Initiative準拠のコンテナ・レジストリからのコンテナ・イメージのプルをサポート

6.強力な分離
    各コンテナ・インスタンスに強力な分離を加えた専用環境を提供
    コンテナ・インスタンスで実行されているコンテナは、OSカーネル及びCPU/メモリー・リソースをほかのコンテナ・インスタンスと共有しない
    プライベートアクセスでOCIコンテナ・レジストリを設定し、コンテナ・イメージのセキュリティ・スキャンを有効化

7.統合されたネットワーキングとアクセス制御
    各コンテナ・インスタンスはVCN内のサブネットに接続され、セキュアな通信を保証
    インスタンス上のコンテナは、Localhostまたは127.0.0.1で相互に検出できる同じネットワーキング・ネームスペースを共有
    IAMを使用して、コンテナ・インスタンスから他のOCIサービス/リソースへのアクセスを制御するポリシーを構成可能

8.ロギング及びモニタリング
    組み込みのログを使用して、OCIコンソールでコンテナ・ログの表示や、APIを使用してログの取得が可能
    CPU及びメモリーの使用率、ディスクI/O、ネットワーク受信/送信バイトなどを監視するための組み込みメトリックを提供


【ユースケース】
・Kubernetesなどのコンテナオーケストレーションを必要としないワークロードに適している。
    DevOps、運用、データ処理ワークフローの一部として一時的なワークロードを実行するのに最適。
・独立したWebアプリケーションやRESTful APIの実行に最適。
・スタンドアロンのレガシー・モノリシック・アプリケーションをコンテナ化して、コンテナ・インスタンスで実行。
・開発環境とテスト環境の迅速な構築と撤収。