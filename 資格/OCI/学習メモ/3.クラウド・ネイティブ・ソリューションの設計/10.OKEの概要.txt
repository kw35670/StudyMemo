【OKE（Container Engine for Kubernetes）の概要】
コンテナ化されたアプリケーションをクラウドにデプロイするために使用でき、「フルマネージド」「スケーラブル」「高可用性サービス」の特性を持ったサービス
クラウドネイティブのアプリをビルド、デプロイ、管理するために使われる。その時はOracleが用意する「仮想ノード」か「管理対象ノード」かを選択できる。
作成されたクラスタはKubernetesコマンドライン（kubectl）,Kubernetesダッシュボード、Kubernetes APIを通じて使用することが出来る。


【OKEクラスタのコンポーネント】
クラスタ・コントロール・プレーン（Oracle管理）
    Kubernetesのコアの機能を実装してる。
    多数のプロセスがあり、Kubernetesエンジンサービスのテナンシのコンピュート・インスタンス（コントロール・プレーン・ノード）で実行される。

クラスタ・データ・プレーン
    クラスタにデプロイされたアプリケーション（Pod）を実行する場所
    ノード・プール内のワークロードは下記の２つのどちからで実行される。
        1,仮想ノード
            自分のPCでノードを使用したくないに選択。
        2,管理対象ノード
            顧客を管理したいまたは管理する必要があるときに選択。
        3,自己管理ノード
            コンピュートサービスで顧客自身が作成したコンピュートインスタンスで作成されたワーカーロード。


【OKEの導入の動機とメリット】
OKE導入の動機
    ・複雑でコストと時間のかかるKubernetesのセットアップとメンテナンス
    ・Kubernetesとコンテナ・ライフサイクル管理の統合の課題
    ・本番クラスタへのチーム・アクセスの管理が困難

主なメリット
    ・開発者はコンテナを迅速にデプロイ可能
    ・DevOpsチームにKubernetes管理の可視化と制御を提供
    ・Kubernetesコンテナ・オーケストレーションをOracleの高度なクラウド・インフラストラクチャと融合して、堅牢な制御、セキュリティ、IAM、一貫したパフォーマンスを実現
