【概要】
開発から本番までのワークフローを簡素化するために設計されたレジストリサービスのこと。
可用性が高くスケーラブルなアーキテクチャである。
イメージをプライベートだけでなくパブリックでも使用できるため簡単に共有ができる。
Open Container Initiative（OCI）標準に準拠している。
マルチアーキテクチャ・イメージ（ARMやAMD64など）及びHelmチャートをサポート。
同じリージョン内のVCN内でOCIリソースはパブリックインターネットを還すことなくOCIRにアクセスできる。


【メリット】
・統合
    OKEと連携可能なため、一貫性のあるコンテナ統合が可能。

・セキュリティ
    プライベートかパブリックかを選択できるため柔軟性があり、管理者がアクセシビリティを制御できるようになっている。
    IAMと統合されているユーザーによる認証が簡単にできる。

・リージョンでの可用性
    デプロイメントと同じリージョンから効率的にプルしてパフォーマンスを最適化できる。

・高可用性
    OCIのサービスを利用しているため堅牢性がある？

・どこからでもアクセス可能
    パブリックにすることが出来るためどこからでもアクセス可能。

・リポジトリの割り当て
    テナンシに対して有効になっている各リージョンに対して最大500個のリポジトリを500GBまで保存できる。（拡張依頼可能）


【コンテナ・レジストリの概念】
・イメージ
    コンテナの作成手順を含む読み取り専用テンプレート。
    コンテナとして実行するアプリケーションを、すべての依存関係とともに保持する。
    Dockerイメージ、マニフェスト・リスト、Helmチャートなどのアーティファクトを格納する。

・リポジトリ
    意味のある名前を付けた、関連するイメージのコレクション。
    リポジトリはプライベートかパブリックにできる。
    同じソース・イメージの異なるバージョンが同じリポジトリにグループ化される。
    OCIRリポジトリからイメージをプッシュ/プルするには、ユーザーがOCIユーザー名および認証トークンを持っている必要がある。


【用語解説】
・リージョン・キー
    コンテナリージョンを識別するもの。

・リポジトリ名
    イメージをプッシュ、プルできるコンテナレジストリ内のリポジトリの名前。コンパートメントで一意である必要がある。
    /（スラッシュ）を名前に含めることが出来るが、あくまでもパスを示す用途ではなくただの文字列である。

・テナンシ・ネームスペース
    テナンシ内で自動生成されたランダムで不変な英数字を使用した文字列。（オブジェクトストレージネームに該当する）

・レジストリ識別子
    コンテナレジストリリージョンキーとテナンシ・ネームスペースの組み合わせ。
    <region-key>.ocir.io/<tenancy-namespace>
    例：iad.ocir.io/ansh81vru1zp

・タグ
    特定のイメージのバージョンを識別するために使用される文字列。
    例：4.6.3、　version2.0test

・イメージ名
    特定のリポジトリ内の特定のイメージを参照する名前。
    <repo-name>:<tag>
    例：project01/acme-web-app:4.6.3

・イメージ・パス（上記を駆使した完成形）
    <region-key>.ocir.io/<tenancy-namespace>/<repo-name>:<tag>
    例：iad.ocir.io/ansh81vru1zp/project01/acme-web-app:version1.0.test


------------------------------

Helmチャート
    Kubernetesクラスタのリソースを記述し、アプリケーションとしてパッケージ化したファイルの集まり。
    参考サイト：https://www.redhat.com/ja/topics/devops/what-is-helm