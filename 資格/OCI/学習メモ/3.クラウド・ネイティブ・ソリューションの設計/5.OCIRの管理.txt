【リポジトリ】
コンパートメントに空のレポジトリを作成し、テナント全体のすべてのコンパートメントに一意の名前を付けることが出来る。
作成するコンパートメントを指定できる。作成後は別のコンパートメントに移行可能。


【イメージ】
OCIのコンソールを使うかDockerクライアントからDockerイメージズコマンドを使用することで、OCIRに保存されているイメージを管理することが出来る。
イメージのプルとプッシュには認証トークンを使用OCIRにログインする。
イメージをプッシュするにはdocker tagコマンドを使用し、ローカルのイメージのコピーを新しいイメージとして作成できる。
イメージを削除しても48時間以内であれば取り消すことが出来る。
保持ポリシーを使用してイメージの保持および削除をすることが出来る。特定のDockerタグがついてるイメージを自動削除の対象外にすることが出来る。
    例：特定の日数pullされていないorタグ付けされていないなど
1時間ごとにイメージを選択基準と照合するプロセスが走り、選択基準を満たしているイメージが自動的に削除される。
テナント内の各リージョンには「グローバル（イメージ）保持ポリシー」と「カスタム保持ポリシー」がある
デフォルトだと自動的に削除される設定はない。
グローバル保持ポリシーを変更して自動削除されるイメージの選択基準を設定するのがメイン。
カスタム保持ポリシーで上書きされていなければ、そのリージョン内のすべてのリポジトリに設定が反映される。
1つのリポジトリには1つのカスタム保持ポリシーし可適応できない。
最初にカスタム保持ポリシーを作成して、リポジトリをどこかのポリシーに参加させるのが一般的。（グローバル保持ポリシーは上書きされる）
リポジトリ全体で保持ポリシーが決まっているのであればグローバル保持ポリシーを使用するのが良い。
グローバル保持ポリシーはリージョン全体に適応されるがリージョンごとに閉じてる（？）
バージョン識別子の削除は「バージョニング解除」で行う（タグ付け解除）
アプリケーションをKubernetesクラスタにデプロイメントするときに、1つ以上のイメージをDockerレジストリからPullする必要がある。
アプリケーションのマニフェストファイルでPullしたいイメージとPullするレジストリの認証情報を指定する。
コンテナ・レジストリからイメージをアプリケーションから取得する際には2つの手順を踏む
    1.Kubectl（キューブ シーティーエル）を使用したDockerレジストリ・シークレットの作成。
        イメージをプルする際のOCIの認証情報が格納されている。
    2.デプロイメント・マニフェスト・ファイルでOCIR内のイメージの場所とDockerシークレットを指定する。
        マニフェスト・ファイルで使用するOCIイメージの場所とDockerコンテナからPullするイメージを指定する。

【セキュリティ】
コンテナレジストリ内のリポジトリに対してユーザーが実行できる操作を細かく制御できる。
ユーザーとグループの概念を使用してテナントとコンパートメントレベルでIAMポリシーを設定することで、リポジトリのアクセスを制御できる。
コンテナレジストリに対してプッシュかプルするときにはユーザー名と認証トークンが必要。
イメージをスキャンしてOSに含まれる脆弱性を検出することが出来る。（OCIの脆弱性スキャンシステムを内部的に使用している）


【コンテナ・レジストリの準備】
1.テナンシは、コンテナ・レジストリが使用可能な1つ以上のリージョンにサブスクライブされているか。
2.DockerCLIへのアクセスが可能か。（最悪クラウドシェルが使用可能）
3.ポリシーが適切な権限を付与するグループに属しているか、テナントのAdministratorsグループに属している。
4.ユーザーがOCIユーザー名と認証トークンを持っているか。